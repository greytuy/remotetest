name: test Workflow

on:
  workflow_dispatch:

jobs:
  build:
    name: Windows  Setup
    runs-on: windows-latest
    timeout-minutes: 9999

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Install and Configure Guacamole
      run: |
        # 安装 VNC Server (用于 Guacamole 连接)
        choco install tightvnc -y
        # 配置 VNC 服务
        vncserver :1 -geometry 1920x1080 -depth 24
        
        # 安装 Cloudflare Tunnel
        Invoke-WebRequest -Uri "https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.exe" -OutFile "cloudflared.exe"
        
        # 启动隧道 (暴露 VNC 端口)
        .\cloudflared.exe tunnel --url tcp://localhost:5901

    - name: Enable RDP Access
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name 'fDenyTSConnections' -Value 0
        Enable-NetFirewallRule -DisplayGroup 'Remote Desktop'
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name 'UserAuthentication' -Value 1

    - name: Set RDP Password
      run: |
        $Password = "${{ secrets.RDP_PASSWORD }}"
        # 验证密码复杂性
        if ($Password.Length -lt 12 -or 
            -not ($Password -match '[A-Z]') -or 
            -not ($Password -match '[a-z]') -or 
            -not ($Password -match '\d') -or 
            -not ($Password -match '[^A-Za-z0-9]')) {
            Write-Error "密码必须至少包含12个字符，并包含大小写字母、数字和特殊字符"
            exit 1
        }
        $SecurePassword = ConvertTo-SecureString $Password -AsPlainText -Force
        Set-LocalUser -Name "runneradmin" -Password $SecurePassword
        Write-Host "RDP 密码已设置完成"

    - name: Start Cloudflare Tunnel
      run: |
        $TunnelToken = "${{ secrets.TUNNEL_TOKEN }}"
        # 验证Token格式
        if (-not ($TunnelToken -match '^eyJ')) {
            Write-Error "Tunnel Token格式无效，必须以'eyJ'开头"
            exit 1
        }
        Write-Host "正在安装Cloudflare Tunnel服务..."
        .\cloudflared.exe service install $TunnelToken
        if ($LASTEXITCODE -ne 0) {
            Write-Error "Cloudflare Tunnel服务安装失败"
            exit 1
        }
        Write-Host "等待服务启动..."
        Start-Sleep -Seconds 5
        Start-Service cloudflared
        if ($?) {
            Write-Host "Cloudflare Tunnel服务已成功启动"
        } else {
            Write-Error "Cloudflare Tunnel服务启动失败"
            exit 1
        }

    - name: Keep Alive
      run: |
        Write-Host "远程桌面连接信息："
        Write-Host "用户名: runneradmin"
        Write-Host "密码: 请使用在GitHub Secrets中设置的RDP_PASSWORD"
        Write-Host "保持连接活跃中..."
        while($true) { Start-Sleep -Seconds 60 }